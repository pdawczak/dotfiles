snippet RC
var ${1:ClassName} = React.createClass({
	render: function () {
		return (
			${2:<div>$0</div>}
		);
	},
});
endsnippet

snippet rm
${1:methodName}: function (${2:args}) {
	$0
},
endsnippet

snippet req
var ${1:Package} = require("${2:package}");$0
endsnippet

snippet var
var ${1:varName} = ${2:"value"};$0
endsnippet

snippet ?:
(${1:condition} ? ${2:"ifTrue"} : ${3:"ifFalse"})
endsnippet

snippet log
console.log($0);
endsnippet

snippet import
import ${1:Module} from "${2:from}";$0
endsnippet

snippet import{
import { ${1:Module} } from "${2:from}";$0
endsnippet

snippet desc
describe("${1:description}", function () {
	$0
});
endsnippet

snippet it
it("${1:description}", function () {
	$0
});
endsnippet

snippet exp
expect(${1:actual}).toBe(${2:expected});$0
endsnippet

snippet (f
(function () {
	"use strict";

	$0
})();
endsnippet

snippet (w
(function () {
	"use strict";

	$0
}).call(window);
endsnippet

snippet RCed
import React from "react";

class ${1:MyComponent} extends React.Component {
	render () {
		return (
			${0:<span>Hello from $1</span>}
		);
	}
}

export default $1;
endsnippet
